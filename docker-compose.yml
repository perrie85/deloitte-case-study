version: '3.8'

services:
  php: &php-service
    build:
      context: .
      dockerfile: .Dockerfile
    command: 'php artisan serve --host=0.0.0.0 --port=8000'
    container_name: app
    ports:
        - 8000:8000
    volumes:
      - .:/var/www/html
    networks:
      - laravel-network
    depends_on:
      - elasticsearch

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel-network

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
    networks:
      - laravel-network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    environment:
      discovery.type: single-node
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD}
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - laravel-network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.6
    ports:
      - "5601:5601"
    networks:
      - laravel-network
    depends_on:
      - elasticsearch

volumes:
  mysql-data:
  redis-data:
  elasticsearch-data:

networks:
  laravel-network:
